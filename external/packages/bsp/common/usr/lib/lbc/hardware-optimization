#!/bin/bash
#
# Copyright (c) Authors: https://www.armbian.com/authors
#
# This file is licensed under the terms of the GNU General Public
# License version 2. This program is licensed "as is" without any
# warranty of any kind, whether express or implied.

# Functions:
#
# set_io_scheduler
# prepare_board
# add_usb_storage_quirks


# Read in basic OS image information
. /etc/board-release

# and script configuration
. /usr/lib/lbc/common

# set audio
#. /usr/lib/lbc/audio-config

set_io_scheduler() {

	# Convert kernel version to integer
	KERNELID=$(uname -r |  awk -F'.' '{print ($1 * 100) + $2}')
	for i in $( lsblk -idn -o NAME | grep -v zram ); do
		read ROTATE </sys/block/$i/queue/rotational
		case ${ROTATE} in
			1) # mechanical drives
				[[ $KERNELID -lt 420 ]] && sched=cfq || sched=bfq
				;;
			0) # flash based
				[[ $KERNELID -lt 420 ]] && sched=noop || sched=none
				;;
			*)
				continue
				;;
		esac
		echo $sched >/sys/block/$i/queue/scheduler
		echo -e "[\e[0;32m ok \x1B[0m] Setting $sched I/O scheduler for $i"
	done

} # set_io_scheduler




prepare_board() {

	CheckDevice=$(for i in /var/log /var / ; do findmnt -n -o SOURCE $i && break ; done)
	# adjust logrotate configs
	if [[ "${CheckDevice}" == *"/dev/zram"* || "${CheckDevice}" == "ramlog" ]]; then
		for ConfigFile in /etc/logrotate.d/* ; do sed -i -e "s/\/var\/log\//\/var\/log.hdd\//g" "${ConfigFile}"; done
		sed -i "s/\/var\/log\//\/var\/log.hdd\//g" /etc/logrotate.conf
	else
		for ConfigFile in /etc/logrotate.d/* ; do sed -i -e "s/\/var\/log.hdd\//\/var\/log\//g" "${ConfigFile}"; done
		sed -i "s/\/var\/log.hdd\//\/var\/log\//g" /etc/logrotate.conf
	fi

	# unlock cpuinfo_cur_freq to be accesible by a normal user
	prefix="/sys/devices/system/cpu/cpufreq"
	for f in $(ls -1 $prefix 2> /dev/null)
	do
		[[ -f $prefix/$f/cpuinfo_cur_freq ]] && chmod +r $prefix/$f/cpuinfo_cur_freq 2> /dev/null
	done
	# older kernels
	prefix="/sys/devices/system/cpu/cpu0/cpufreq/"
	[[ -f $prefix/cpuinfo_cur_freq ]] && chmod +r $prefix/cpuinfo_cur_freq 2> /dev/null

	# enable compression where not exists
	find /etc/logrotate.d/. -type f | xargs grep -H -c 'compress' | grep 0$ | cut -d':' -f1 | xargs -r -L1 sed -i '/{/ a compress'
	sed -i "s/#compress/compress/" /etc/logrotate.conf

	# tweak ondemand cpufreq governor settings to increase cpufreq with IO load
	grep -q ondemand /etc/default/cpufrequtils
	if [ $? -eq 0 ]; then
		echo ondemand >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
		cd /sys/devices/system/cpu
		for i in cpufreq/ondemand cpu0/cpufreq/ondemand cpu4/cpufreq/ondemand ; do
			if [ -d $i ]; then
				echo 1 >${i}/io_is_busy
				echo 25 >${i}/up_threshold
				echo 10 >${i}/sampling_down_factor
				echo 200000 >${i}/sampling_rate
			fi
		done
	fi

	chmod +x /etc/update-motd.d/*

	# IRQ distribution based on $LINUXFAMILY and/or $BOARD_NAME
	case ${BOARD} in

		lubancat-a1)

			# 初始化配置
			echo 1 > /proc/bluetooth/sleep/lpm
			echo 1 > /proc/bluetooth/sleep/btwrite
			echo 0 > /sys/class/rfkill/rfkill1/state
			sleep 1
			echo 1 > /sys/class/rfkill/rfkill1/state
			sleep 1

			# 注册hci设备
			hciattach_lbc -n -s 1500000 ttyAS1 aic &

			echo 1 > /sys/class/rfkill/rfkill3/state

			;;
	
	esac

	case ${LINUXFAMILY} in

		sun50i*|sunxi64*) # A64/H5 based boards like Pine64, OPi PC 2, NanoPi NEO 2
			# Send IRQs for the lower real USB port (usb2) to cpu2 and for the upper (OTG/usb1) to cpu1
			echo 2 >/proc/irq/$(awk -F":" "/usb1/ {print \$1}" </proc/interrupts | sed 's/\ //g')/smp_affinity
			echo 4 >/proc/irq/$(awk -F":" "/usb2/ {print \$1}" </proc/interrupts | sed 's/\ //g')/smp_affinity
			echo 8 >/proc/irq/$(awk -F":" "/sunxi-mmc/ {print \$1}" </proc/interrupts | sed 's/\ //g' | head -n1)/smp_affinity
			echo 8 >/proc/irq/$(awk -F":" "/eth/ {print \$1}" </proc/interrupts | sed 's/\ //g' | head -n1)/smp_affinity
			echo 7 >/sys/class/net/eth0/queues/rx-0/rps_cpus
			;;
	esac
} # prepare_board

add_usb_storage_quirks() {

	# check for /boot/uEnv.txt existence
	[ -f /boot/uEnv.txt ] || return

	# cleanup. add LF. This prevents adding parameters to the same line
	echo "" >> /boot/uEnv.txt;  sed -i '/^$/d;$G' /boot/uEnv.txt; sed -i '/^$/d;$G' /boot/uEnv.txt

	# cleanup. remove empty lines in the middle
	sed -i '/^$/d' /boot/uEnv.txt

	# preserve old contents if existent
	TMPFILE=$(mktemp /tmp/${0##*/}.XXXXXX)
	trap "sleep 1 ; rm \"${TMPFILE}\" ; exit 0" 0 1 2 3 15
	awk -F"=" '/^usbstoragequirks/ {print $2}' </boot/uEnv.txt | tr -d -c '[:graph:]' >${TMPFILE}

	# UAS blacklist Norelsys NS1068X and NS1066X since broken. Can be removed once
	# they're blacklisted upstream
	[ -s ${TMPFILE} ] || echo "0x2537:0x1066:u,0x2537:0x1068:u" >${TMPFILE}

	# check for connected Seagate or WD HDD enclosures and blacklist them all
	lsusb | awk -F" " '{print "0x"$6}' | sed 's/:/:0x/' | sort | uniq | while read ; do
		case ${REPLY} in
			"0x0bc2:"*|"0x1058:"*)
				grep -q "${REPLY}" ${TMPFILE} || sed -i "1 s/\$/,${REPLY}:u/" ${TMPFILE}
				;;
		esac
	done

	read USBQUIRKS <${TMPFILE}
	sed -i '/^usbstoragequirks/d' /boot/uEnv.txt
	echo "usbstoragequirks=${USBQUIRKS}" >>/boot/uEnv.txt
	sync &
	if [ -f /sys/module/usb_storage/parameters/quirks ]; then
		echo ${USBQUIRKS} >/sys/module/usb_storage/parameters/quirks
	fi

} # add_usb_storage_quirks


branch_naming_workaround()
# https://armbian.atlassian.net/browse/AR-748
# Once we rework kernel packages, this can be done better
{

	if [[ -z $(cat /etc/board-release | grep BRANCH) ]]; then
		BRANCH=$(dpkg -l | egrep "linux-image" | egrep "current|legacy|edge" | awk '{print $2}' | cut -d"-" -f3 | head -1)
		[[ -n ${BRANCH} ]] && echo "BRANCH=$BRANCH" >> /etc/board-release
	fi
}


case $1 in
	*start*)
		# set optimal disk scheduler settings
		set_io_scheduler &

		# hardware preparation
		prepare_board &

		# add usb quirks
		add_usb_storage_quirks &

		# branch naming workaround
		branch_naming_workaround &
		;;
esac
